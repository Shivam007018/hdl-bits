module top_module(
    input clk,
    input reset,    // synchronous reset to state B
    input in,
    output reg out
);

    reg state, next_state;
    parameter B = 1'b0, A = 1'b1;

    // State register with sync reset
    always @(posedge clk ) begin
        if (reset)
            state <= B;
        else
            state <= next_state;
    end

    // Next-state logic
    always @(*) begin
        case (state)
            B: next_state = (in ? B : A);
            A: next_state = (in ? A : B);
            default: next_state = B;
        endcase
    end

    // Output logic (Moore type)
    always @(*) begin
        case (state)
            B: out = 1;
            A: out = 0;
        endcase
    end

endmodule
